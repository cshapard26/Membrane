{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "1155eb76",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import json\n",
    "from pathlib import Path\n",
    "import os"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "8f469830",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>User1</th>\n",
       "      <th>User2</th>\n",
       "      <th>User3</th>\n",
       "      <th>User4</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Cardio.duration</th>\n",
       "      <td>6.8</td>\n",
       "      <td>3.2</td>\n",
       "      <td>9.3</td>\n",
       "      <td>1.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cardio.intensity</th>\n",
       "      <td>8.3</td>\n",
       "      <td>9.8</td>\n",
       "      <td>3.3</td>\n",
       "      <td>4.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>strengthtraining.sets</th>\n",
       "      <td>1.2</td>\n",
       "      <td>6.2</td>\n",
       "      <td>2.5</td>\n",
       "      <td>3.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>strengthtraining.reps</th>\n",
       "      <td>4.2</td>\n",
       "      <td>9.7</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>flexibility.stretching_time</th>\n",
       "      <td>16.9</td>\n",
       "      <td>12.5</td>\n",
       "      <td>14.3</td>\n",
       "      <td>12.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>flexibility.yoga_sessions</th>\n",
       "      <td>2.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                             User1  User2  User3  User4\n",
       "Cardio.duration                6.8    3.2    9.3    1.8\n",
       "Cardio.intensity               8.3    9.8    3.3    4.3\n",
       "strengthtraining.sets          1.2    6.2    2.5    3.7\n",
       "strengthtraining.reps          4.2    9.7    4.0    0.5\n",
       "flexibility.stretching_time   16.9   12.5   14.3   12.2\n",
       "flexibility.yoga_sessions      2.0    5.0    4.0    1.0"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "\n",
    "df = [] #pd.DataFrame([])\n",
    "user_list = []\n",
    "\n",
    "def compile_data(directory_address):\n",
    "    user_list = []\n",
    "    #[\"1\",\"2\"]\n",
    "    #df = []\n",
    "    \n",
    "    for user in os.listdir(directory_address):\n",
    "        if user.endswith(\".json\"):                              # check the files which are end with specific extension\n",
    "#             user_list = user_list.append(user)\n",
    "            #print(user_list)\n",
    "            user_list.append(user)\n",
    "    \n",
    "    with open(f\"{directory_address}/{user_list[0]}\", 'r') as openfile:\n",
    "        json_object = json.load(openfile)                                # Reading from json file\n",
    "    \n",
    "    df = pd.json_normalize(json_object).T\n",
    "    df.columns = [user_list[0][:-5]]\n",
    "    \n",
    "    user_list = user_list[1:]\n",
    "        \n",
    "    for user in user_list:\n",
    "    \n",
    "    #if user.endswith(\".json\"):                                      # check the files which are end with specific extension\n",
    "        with open(f\"{directory_address}/{user}\", 'r') as openfile:\n",
    "            json_object = json.load(openfile)                          # Reading from json file\n",
    "        df1= pd.json_normalize(json_object).T\n",
    "        df1.columns = [user[:-5]]\n",
    "        df = pd.concat([df,df1],axis=1)\n",
    "        #df.columns.append(pd.Index(user[:-5])) #[df.columns[:-1][0], user[:-5]]\n",
    "    return df\n",
    "\n",
    "compile_data('./data/App1')\n",
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "b34202f4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>User1</th>\n",
       "      <th>User2</th>\n",
       "      <th>User3</th>\n",
       "      <th>User4</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>sleep.rem</th>\n",
       "      <td>9.10</td>\n",
       "      <td>4.50</td>\n",
       "      <td>2.10</td>\n",
       "      <td>7.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>sleep.dream</th>\n",
       "      <td>2.60</td>\n",
       "      <td>5.20</td>\n",
       "      <td>7.60</td>\n",
       "      <td>3.20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>sleep.awake</th>\n",
       "      <td>0.10</td>\n",
       "      <td>0.50</td>\n",
       "      <td>1.50</td>\n",
       "      <td>2.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>snoring.volume</th>\n",
       "      <td>11.14</td>\n",
       "      <td>15.25</td>\n",
       "      <td>10.27</td>\n",
       "      <td>0.25</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                User1  User2  User3  User4\n",
       "sleep.rem        9.10   4.50   2.10   7.10\n",
       "sleep.dream      2.60   5.20   7.60   3.20\n",
       "sleep.awake      0.10   0.50   1.50   2.10\n",
       "snoring.volume  11.14  15.25  10.27   0.25"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "compile_data('./data/App2')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "863f2f41",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>User1</th>\n",
       "      <th>User2</th>\n",
       "      <th>User3</th>\n",
       "      <th>User4</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>App3.sleep.duration.rem</th>\n",
       "      <td>2.3</td>\n",
       "      <td>1.4</td>\n",
       "      <td>2.8</td>\n",
       "      <td>1.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>App3.sleep.duration.dream</th>\n",
       "      <td>5.1</td>\n",
       "      <td>6.1</td>\n",
       "      <td>8.2</td>\n",
       "      <td>5.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>App3.sleep.duration.awake</th>\n",
       "      <td>2.3</td>\n",
       "      <td>0.4</td>\n",
       "      <td>0.8</td>\n",
       "      <td>1.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>App3.sleep.quality</th>\n",
       "      <td>6.5</td>\n",
       "      <td>7.2</td>\n",
       "      <td>5.1</td>\n",
       "      <td>2.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>App3.snoring.volume</th>\n",
       "      <td>7.1</td>\n",
       "      <td>5.3</td>\n",
       "      <td>2.2</td>\n",
       "      <td>7.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>App3.snoring.frequency</th>\n",
       "      <td>9.2</td>\n",
       "      <td>3.8</td>\n",
       "      <td>4.9</td>\n",
       "      <td>1.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>App3.wake_ups.number</th>\n",
       "      <td>3.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>App3.wake_ups.interruptions</th>\n",
       "      <td>2.2</td>\n",
       "      <td>1.5</td>\n",
       "      <td>2.6</td>\n",
       "      <td>0.2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                             User1  User2  User3  User4\n",
       "App3.sleep.duration.rem        2.3    1.4    2.8    1.6\n",
       "App3.sleep.duration.dream      5.1    6.1    8.2    5.1\n",
       "App3.sleep.duration.awake      2.3    0.4    0.8    1.2\n",
       "App3.sleep.quality             6.5    7.2    5.1    2.5\n",
       "App3.snoring.volume            7.1    5.3    2.2    7.2\n",
       "App3.snoring.frequency         9.2    3.8    4.9    1.4\n",
       "App3.wake_ups.number           3.0    2.0    5.0    1.0\n",
       "App3.wake_ups.interruptions    2.2    1.5    2.6    0.2"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "compile_data('./data/App3')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7f0aada0",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
